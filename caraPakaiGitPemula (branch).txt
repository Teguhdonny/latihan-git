# 1. Download dan Install git dan buat akun di github

# 2. Setting Konfigurasi
git config --global user.name "username github lu"
git config --global user.email "email github lu"

# 3. Generate PAT (opsional), biar gampang langsung aja sign in github di vscode
masuk dan login ke Github.com -> klik gambar profile (pojok kanan atas) -> Settings -> Scroll ke bawah cari Developer Settings -> 
Personal Access Tokens -> Token ( classic ) -> Generate new token -> centang repo & workflow -> simpan token nya

# 4. Gabung sebagai collaborator di repo tertentu

# 5. Clone project 
git clone <url-repo>
cd <nama-folder-repo> / Buka folder hasil clone di vs code

# 6. Bikin branch baru dan otomatis pindah ke branch tu
git checkout -b namaBranch

# 7. Lakukan perubahan ( entah perubahan di file yang sudah ada atau buat file baru )

# 8. Cek status (opsional, liat file yg berubah)
git status

# 9. Tambahin semua perubahan yang dilakuin
git add .

# 10. Commit perubahan
git commit -m "pesan singkat tentang kerjaan"

# 11. Push pertama kali di branch baru
git push -u origin namaBranch

# 12. Push untuk perubahan di branch yang sama dan sebelumnya sudah pernah ada puh di branch tersebut (lanjutan kerja)
git push

# 13. Buat pull request baru ( kalau baru bikin branch dan jalanin git push origin namaBranch )
buka github -> klik gambar profile -> Settings ->repositories -> cari nama repo nya atau ketik git remote -v di terminal buat check nama reponya ->
buka reponya di github, cek di bagian pull request ada banner " Compare and pull request ", klik itu -> create pull request

kalau ga muncul bannernya, cari manual
Akses repo tujuan -> klik new pull request -> bagian compare: , cari nama branchnya -> klik Create pull request

# Untuk pull selanjutnya di branch yang sama alurnya sama yang beda cara pushbya, bukan pake git push origin namaBranch lagi, cukup ketik git push

# 14 Command tambahan
- git branch ( Buat check nama branch yang duah dibuat di lokal / yang lu buat di vscode )
- git branch -r ( Buat check nama branch yang ada di server / repo)
// Hijau / ada tanda * berarti sedang dipakai / checkout
